[package]
name = "app"
version = "0.1.0"
description = "A Tauri App"
authors = ["you"]
license = ""
repository = ""
default-run = "app"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.5.1", features = [] }

[dependencies]
serde_json = "1.0.110"
serde = { version = "1.0.194", features = ["derive"] }
tauri = { version = "1.5.4", features = ["api-all", "devtools"] }
structstruck = "0.4.1"
tryvial = "0.2.0"
specta = { version = "=2.0.0-rc.7", features = [
    "url",
    "uuid",
    "export",
    "indexmap",
] }
tauri-specta = { version = "=2.0.0-rc.4", features = ["typescript"] }
anyhow = "1.0.79"
fn-error-context = "0.2.1"
uuid = { version = "1.6.1", features = ["serde"] }
tokio = "1.35.1"
walkdir = "2.4.0"
registry = "1.2.3"
keyvalues-serde = "0.2.1"
itertools = "0.12.0"
arc-swap = { version = "1.6.0", features = ["serde"] }
serde-smile = "0.2.0"
brotli-decompressor = "2.5.1"
reqwest = "0.11.23"
trash = "3.1.2"
notify = { version = "6.1.1", default-features = false, features = [
    "macos_fsevent",
] }
quickentity-rs = { path = "../../quickentity-rs" }
lazy_static = "1.4.0"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]
